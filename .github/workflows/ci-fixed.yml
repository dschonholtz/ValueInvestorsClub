name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Python linting
        run: |
          # Install linting tools directly to system without virtual env
          uv pip install --system ruff mypy
          ruff check .
          mypy api/
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Frontend linting
        run: |
          cd frontend
          npm ci
          npm run lint
  
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_ideas
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install all requirements, including test requirements
          pip install -r requirements.txt
          pip install -r test-requirements.txt
      
      - name: Set up test database
        run: |
          export SKIP_DB_VERIFY=true
          python -m api.tests.setup_test_db --drop
        env:
          DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/test_ideas
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          TEST_DB_NAME: test_ideas
      
      - name: Run backend tests
        run: |
          # Skip the production database test since we don't have vic_ideas.sql in CI
          python -m pytest api/tests/ -v -k "not test_production_database_tables_exist" --cov=api --cov-report=xml
        env:
          DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/test_ideas
          SKIP_DB_VERIFY: true
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
  
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/coverage-final.json
          fail_ci_if_error: false
  
  api-contract-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install all requirements, not just fastapi
          pip install -r requirements.txt
      
      - name: Validate API schema
        run: |
          # Set environment variables to prevent database verification
          export SKIP_DB_VERIFY=true
          export CI=true
          python -m api.validate_schema
        env:
          SKIP_DB_VERIFY: true